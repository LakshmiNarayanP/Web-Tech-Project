{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\namit\\\\OneDrive\\\\Desktop\\\\College\\\\WT\\\\login-reg\\\\frontend\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport UserContext from \"../../context/UserContext\";\nexport default function Register() {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n  const [error, serError] = useState();\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async e => {\n    try {\n      e.preventDefault(); //to prevent from reloading page\n\n      const newUser = {\n        email,\n        password,\n        passwordCheck,\n        displayName\n      };\n      await Axios.post('http://localhost:5000/user/register', newUser);\n      const loginRes = await Axios.post('http://localhost:5000/user/login', {\n        email,\n        password\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user\n      });\n    } catch (err) {\n      err.response.data.msg && MediaStreamError(err.response.data.msg);\n    }\n\n    localStorage.setItem('auth-token', loginRes.data.token);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n      message: error,\n      clearError: () => MediaStreamError(undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"register-email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register-email\",\n        type: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"register-password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register-password\",\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Verify password\",\n        onChange: e => setPasswordCheck(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"register-display-name\",\n        children: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register-display-name\",\n        type: \"text\",\n        onChange: e => setDisplayName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"Cmzv/3G3RVDSsMBq8LxbTl0MjNI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/namit/OneDrive/Desktop/College/WT/login-reg/frontend/src/components/auth/Register.js"],"names":["React","useState","useContext","useHistory","Axios","UserContext","Register","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","displayName","setDisplayName","error","serError","setUserData","history","submit","e","preventDefault","newUser","post","loginRes","token","data","user","err","response","msg","MediaStreamError","localStorage","setItem","push","undefined","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,EAAlD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAAgBf,UAAU,CAACG,WAAD,CAAhC;AACA,QAAMa,OAAO,GAAGf,UAAU,EAA1B;;AAEA,QAAMgB,MAAM,GAAG,MAAMC,CAAN,IAAY;AACvB,QAAG;AACCA,MAAAA,CAAC,CAACC,cAAF,GADD,CACqB;;AACpB,YAAMC,OAAO,GAAG;AAACf,QAAAA,KAAD;AAAQE,QAAAA,QAAR;AAAkBE,QAAAA,aAAlB;AAAiCE,QAAAA;AAAjC,OAAhB;AACA,YAAMT,KAAK,CAACmB,IAAN,CAAW,qCAAX,EAAkDD,OAAlD,CAAN;AACA,YAAME,QAAQ,GAAG,MAAMpB,KAAK,CAACmB,IAAN,CAAW,kCAAX,EAA+C;AAAChB,QAAAA,KAAD;AAAQE,QAAAA;AAAR,OAA/C,CAAvB;AACAQ,MAAAA,WAAW,CAAC;AACRQ,QAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAcD,KADb;AAERE,QAAAA,IAAI,EAAEH,QAAQ,CAACE,IAAT,CAAcC;AAFZ,OAAD,CAAX;AAIH,KATD,CASE,OAAMC,GAAN,EAAW;AACTA,MAAAA,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAlB,IAAyBC,gBAAgB,CAACH,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,CAAzC;AACH;;AACDE,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCT,QAAQ,CAACE,IAAT,CAAcD,KAAjD;AACAP,IAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKnB,KAAK,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAIA,KAAxB;AAA+B,MAAA,UAAU,EAAE,MAAMgB,gBAAgB,CAACI,SAAD;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFd,eAGI;AAAM,MAAA,SAAS,EAAG,MAAlB;AAAyB,MAAA,QAAQ,EAAEhB,MAAnC;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAKC,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACgB,MAAF,CAASC,KAAV;AAH/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AACI,QAAA,EAAE,EAAC,mBADP;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAKjB,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACgB,MAAF,CAASC,KAAV;AAHlC;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AACI,QAAA,IAAI,EAAG,UADX;AAEI,QAAA,WAAW,EAAC,iBAFhB;AAGI,QAAA,QAAQ,EAAKjB,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV;AAHvC;AAAA;AAAA;AAAA;AAAA,cAdJ,eAoBI;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AACI,QAAA,EAAE,EAAG,uBADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAKjB,CAAD,IAAON,cAAc,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV;AAHrC;AAAA;AAAA;AAAA;AAAA,cArBJ,eA2BI;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA9DuB/B,Q;UAQJH,U;;;KARIG,Q","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\nexport default function Register(){\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [passwordCheck, setPasswordCheck] = useState();\r\n    const [displayName, setDisplayName] = useState();\r\n    const [error, serError] = useState();\r\n\r\n    const {setUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const submit = async(e) => {\r\n        try{\r\n            e.preventDefault(); //to prevent from reloading page\r\n            const newUser = {email, password, passwordCheck, displayName};\r\n            await Axios.post('http://localhost:5000/user/register', newUser);\r\n            const loginRes = await Axios.post('http://localhost:5000/user/login', {email, password});\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n        } catch(err) {\r\n            err.response.data.msg && MediaStreamError(err.response.data.msg);\r\n        }\r\n        localStorage.setItem('auth-token', loginRes.data.token);\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className = \"page\">\r\n            <h1>Register</h1>\r\n            {error && <ErrorNotice message = {error} clearError={() => MediaStreamError(undefined)}></ErrorNotice>}\r\n            <form className = \"form\" onSubmit={submit}>\r\n                <label htmlFor=\"register-email\">Email</label>\r\n                <input \r\n                    id=\"register-email\" \r\n                    type=\"email\" \r\n                    onChange = {(e) => setEmail(e.target.value)}>\r\n                </input>\r\n\r\n                <label htmlFor=\"register-password\">Password</label>\r\n                <input \r\n                    id=\"register-password\" \r\n                    type=\"password\"\r\n                    onChange = {(e) => setPassword(e.target.value)}>       \r\n                </input>\r\n                <input \r\n                    type = \"password\" \r\n                    placeholder=\"Verify password\"\r\n                    onChange = {(e) => setPasswordCheck(e.target.value)}>\r\n                </input>\r\n\r\n                <label htmlFor=\"register-display-name\">Display Name</label>\r\n                <input \r\n                    id = \"register-display-name\" \r\n                    type=\"text\"\r\n                    onChange = {(e) => setDisplayName(e.target.value)}>\r\n                </input>\r\n\r\n                <input type = \"submit\" value=\"Register\"></input>            \r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}